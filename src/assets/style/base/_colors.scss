@import '../helpers/functions';

/**
 * ------- COLOR MIXIN ----------
 *
 * Esta mixin é para configuração da paleta de cores.
 *
 */


// Configuração da paleta de cores
$palette: (
  secondary: (
    yellow: #FFB854,
    orange: #EA8079,
    pink: #DB5D79,
    sky-blue: #84B8E2,
    dark-w-green: #68BFB7,
    water-green: #86D0CB,
  ),
  grey: (
    lightest: #F2F2F2,
    light: #E0E0E0,
    base:#9B9A9A,
    dark:#585858,
  ),
  primary: (
    guava: #E2645A,
  ),
  gradients: (
    green-blue: linear-gradient(263.69deg, #84B8E2 -5.62%, #86D0CB 77.09%),
    guava-pink: linear-gradient(269.41deg, #DB5D79 0.41%, #E2645A 99.41%),
  ),
);

/**
	* Função que vai gerar a paleta de cores
	*
	* USAGE:
	*
	* .foo{
	*   background: color(indigo, 400);
	* }
	*
*/

@function colors($color, $fill) {
  $color: map-deep-get($palette, $color, $fill);
  @return $color;
}

// Fazendo setup das classes cores e do background e acordo com a paleta
@each $color,
$fill in $palette {
  $lenght: length($fill);

  @for $i from 1 through $lenght {
    $fillkey: map-keys($fill);
    $fillkey: nth($fillkey, $i);
    $colors-set: nth(map-values($fill), $i);

    .bg-#{"" + $color}-#{"" + $fillkey} {
      background-color: $colors-set;
    }

    .color-#{"" + $color}-#{"" + $fillkey} {
      color: $colors-set;
    }
  }
}

/**
 * ------- SHADOW MIXIN ----------
 *
 * Esta mixin é para configuração das sombras.
 *
 */

 $shadows: (
   default: (0px 3px 10px rgba(88, 88, 88, 0.1), 0px 16px 31px rgba(88, 88, 88, 0.1)),
   green: (0px 4px 12px rgba(134, 208, 203, 0.05), 0px 18px 31px rgba(134, 208, 203, 0.38)),
   guava: (0px 4px 12px rgba(226, 100, 90, 0.05), 0px 18px 31px rgba(226, 100, 90, 0.38)),
   hover: 0px 4px 4px rgba(0, 0, 0, 0.2),
 );

 @each $key, $value in $shadows {
   .shadow-#{$key} {
     box-shadow: $value;
   }
 }
